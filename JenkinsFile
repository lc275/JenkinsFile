你可以使用 JavaScript 控制展开和收起，而不是使用 CSS 的 :hover，这样只有点击 "更多" 按钮时，才会展开或收回菜单。下面是改进后的 HTML + CSS + JavaScript 代码：


---

1. 更新 HTML & CSS

<nav id="tool-navbar">
    <ul id="main-tools"></ul>
    <div id="more-dropdown">
        <button id="more-btn">更多 ▼</button>
        <ul id="more-tools" class="hidden"></ul>
    </div>
</nav>

<style>
    #tool-navbar {
        display: flex;
        background: #333;
        padding: 10px;
        align-items: center;
    }
    #tool-navbar ul {
        list-style: none;
        padding: 0;
        margin: 0;
        display: flex;
    }
    #tool-navbar li {
        margin-right: 15px;
    }
    #tool-navbar a {
        color: white;
        text-decoration: none;
        padding: 8px 12px;
        background: #444;
        border-radius: 5px;
    }
    #more-dropdown {
        position: relative;
    }
    #more-tools {
        display: none;
        position: absolute;
        background: #444;
        top: 100%;
        left: 0;
        list-style: none;
        padding: 5px;
        margin: 0;
        border-radius: 5px;
        min-width: 100px;
    }
    #more-tools li {
        margin: 5px 0;
    }
    #more-btn {
        background: #555;
        color: white;
        border: none;
        padding: 8px 12px;
        cursor: pointer;
        border-radius: 5px;
    }
    .hidden {
        display: none;
    }
</style>


---

2. 更新 JavaScript

async function loadNavbar() {
    // 读取工具列表
    const response = await fetch("tools.js");
    const tools = await response.json();

    const mainToolsContainer = document.getElementById("main-tools");
    const moreToolsContainer = document.getElementById("more-tools");
    const moreBtn = document.getElementById("more-btn");

    // 显示前 5 个工具
    tools.slice(0, 5).forEach(tool => {
        const li = document.createElement("li");
        li.innerHTML = `<a href="${tool.url}">${tool.name}</a>`;
        mainToolsContainer.appendChild(li);
    });

    // 剩余的工具放入 "更多"
    tools.slice(5).forEach(tool => {
        const li = document.createElement("li");
        li.innerHTML = `<a href="${tool.url}">${tool.name}</a>`;
        moreToolsContainer.appendChild(li);
    });

    // 绑定点击事件
    moreBtn.addEventListener("click", () => {
        moreToolsContainer.classList.toggle("hidden");
    });

    // 点击页面其他地方时，自动收起
    document.addEventListener("click", (event) => {
        if (!moreBtn.contains(event.target) && !moreToolsContainer.contains(event.target)) {
            moreToolsContainer.classList.add("hidden");
        }
    });
}

// 自动加载导航栏
document.addEventListener("DOMContentLoaded", async () => {
    const navContainer = document.createElement("div");
    document.body.insertBefore(navContainer, document.body.firstChild);
    
    // 加载导航栏 HTML
    const response = await fetch("nav.html");
    navContainer.innerHTML = await response.text();
    
    // 加载导航栏工具
    loadNavbar();
});


---

3. 交互逻辑

1. 点击 "更多" 按钮 → 展开 more-tools（移除 .hidden）。


2. 再次点击 "更多" 按钮 → 收起 more-tools（添加 .hidden）。


3. 点击页面其他地方，也会自动收起 more-tools。



这样，"更多" 按钮的展开和收回效果就完全符合你的需求了！

